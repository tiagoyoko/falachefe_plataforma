#!/usr/bin/env tsx

/**
 * Script de teste para verificar se a conex√£o com o banco est√° funcionando
 * e se os dados do onboarding est√£o sendo consultados corretamente
 */

import { config } from 'dotenv'

// Carregar vari√°veis de ambiente ANTES de importar outros m√≥dulos
config({ path: '.env.local' })

// Verificar se as vari√°veis foram carregadas
if (!process.env.DATABASE_URL) {
  console.error('‚ùå DATABASE_URL n√£o encontrada!')
  process.exit(1)
}

console.log('‚úÖ Vari√°veis de ambiente carregadas com sucesso')

// Agora importar os m√≥dulos que dependem das vari√°veis de ambiente
import { userProfileTool } from '../src/agents/core/user-profile-tool'
import { userProfileManager } from '../src/agents/memory/user-profile'

async function testRealDatabaseConnection() {
  console.log('üß™ Testando conex√£o real com o banco de dados...\n')

  // Teste 1: Verificar se a conex√£o com o banco est√° funcionando
  console.log('1Ô∏è‚É£ Testando conex√£o com o banco...')
  try {
    const testUserId = 'test-user-123'
    const profile = await userProfileManager.getUserProfile(testUserId)
    console.log('‚úÖ Conex√£o com banco funcionando')
    console.log('üìä Perfil encontrado:', profile ? 'Sim' : 'N√£o')
    if (profile) {
      console.log('üìù Dados do perfil:', JSON.stringify(profile, null, 2))
    } else {
      console.log('‚ÑπÔ∏è Nenhum perfil encontrado para o usu√°rio de teste')
    }
  } catch (error) {
    console.error('‚ùå Erro na conex√£o com banco:', error)
    return
  }

  console.log('\n' + '='.repeat(50) + '\n')

  // Teste 2: Criar dados de teste no banco
  console.log('2Ô∏è‚É£ Criando dados de teste no banco...')
  try {
    const testUserId = 'test-user-123'
    
    // Criar perfil de teste
    await userProfileManager.updateUserProfile(testUserId, {
      personalInfo: {
        name: 'Jo√£o Silva',
        company: 'TechCorp Ltda',
        position: 'Gerente de Projetos',
        industry: 'Tecnologia',
        companySize: '11-50'
      },
      businessContext: {
        goals: ['Aumentar produtividade', 'Reduzir custos'],
        priorities: ['Automa√ß√£o', 'Gest√£o financeira']
      }
    })
    
    console.log('‚úÖ Dados de teste criados no banco')
    
    // Consultar novamente para verificar
    const profile = await userProfileManager.getUserProfile(testUserId)
    if (profile) {
      console.log('üìä Perfil ap√≥s cria√ß√£o:', JSON.stringify(profile, null, 2))
    }
  } catch (error) {
    console.error('‚ùå Erro ao criar dados de teste:', error)
  }

  console.log('\n' + '='.repeat(50) + '\n')

  // Teste 3: Testar userProfileTool com dados reais
  console.log('3Ô∏è‚É£ Testando userProfileTool com dados reais...')
  try {
    const testUserId = 'test-user-123'
    
    // Testar getUserProfile
    const profileResult = await userProfileTool.getUserProfile({
      userId: testUserId,
      includeSummary: true
    })
    console.log('‚úÖ getUserProfile funcionando')
    console.log('üìä Resultado:', profileResult.success ? 'Sucesso' : 'Falha')
    if (profileResult.success) {
      console.log('üìù Dados retornados:', JSON.stringify(profileResult.data, null, 2))
      console.log('üìã Resumo:', profileResult.summary)
    } else {
      console.log('‚ùå Erro:', profileResult.error)
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao testar userProfileTool:', error)
  }

  console.log('\n' + '='.repeat(50) + '\n')

  // Teste 4: Testar tools individuais
  console.log('4Ô∏è‚É£ Testando tools individuais...')
  try {
    const testUserId = 'test-user-123'
    
    // Testar getPersonalInfo
    const personalInfoResult = await userProfileTool.getPersonalInfo(testUserId)
    console.log('üë§ getPersonalInfo:', personalInfoResult.success ? 'Sucesso' : 'Falha')
    if (personalInfoResult.success) {
      console.log('üìù Dados pessoais:', JSON.stringify(personalInfoResult.data, null, 2))
    } else {
      console.log('‚ùå Erro:', personalInfoResult.error)
    }
    
    // Testar getBusinessContext
    const businessContextResult = await userProfileTool.getBusinessContext(testUserId)
    console.log('üè¢ getBusinessContext:', businessContextResult.success ? 'Sucesso' : 'Falha')
    if (businessContextResult.success) {
      console.log('üìù Contexto empresarial:', JSON.stringify(businessContextResult.data, null, 2))
    } else {
      console.log('‚ùå Erro:', businessContextResult.error)
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao testar tools individuais:', error)
  }

  console.log('\nüéâ Teste de conex√£o com banco conclu√≠do!')
}

// Executar teste
testRealDatabaseConnection().catch(console.error)
