#!/usr/bin/env python3
"""
Teste simplificado de Hierarchical Process
Sem decorators, configuraÃ§Ã£o direta
"""

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from crewai import Agent, Crew, Task, Process
from falachefe_crew.tools.cashflow_tools import AddCashflowTransactionTool, GetCashflowBalanceTool

# Criar agentes especialistas
consultor = Agent(
    role="Consultor de Fluxo de Caixa",
    goal="Responder dÃºvidas sobre fluxo de caixa",
    backstory="VocÃª Ã© um especialista em ensinar sobre fluxo de caixa de forma didÃ¡tica.",
    allow_delegation=False,
    verbose=True
)

registrador = Agent(
    role="Registrador de TransaÃ§Ãµes",
    goal="Registrar transaÃ§Ãµes no fluxo de caixa",
    backstory="VocÃª registra transaÃ§Ãµes usando a ferramenta adequada.",
    allow_delegation=False,
    verbose=True,
    tools=[AddCashflowTransactionTool()]
)

analista = Agent(
    role="Analista de Fluxo de Caixa",
    goal="Consultar e analisar dados do fluxo de caixa",
    backstory="VocÃª busca dados reais do fluxo de caixa usando ferramentas.",
    allow_delegation=False,
    verbose=True,
    tools=[GetCashflowBalanceTool()]
)

# Criar manager
manager = Agent(
    role="Gerente de Fluxo de Caixa",
    goal="Delegar requests aos especialistas adequados",
    backstory="""VocÃª coordena especialistas em fluxo de caixa.
    
    Delegue para:
    - "Consultor de Fluxo de Caixa" para dÃºvidas
    - "Registrador de TransaÃ§Ãµes" para adicionar
    - "Analista de Fluxo de Caixa" para consultar""",
    allow_delegation=True,
    verbose=True,
    llm="gpt-4o"
)

# Criar task
task = Task(
    description="""Atender o request do usuÃ¡rio: {user_request}
    
    User ID: {user_id}
    
    Se for dÃºvida â†’ delegue ao Consultor de Fluxo de Caixa
    Se for adicionar â†’ delegue ao Registrador de TransaÃ§Ãµes  
    Se for consultar â†’ delegue ao Analista de Fluxo de Caixa""",
    expected_output="Resposta completa do especialista que atendeu",
    agent=manager
)

# Criar crew hierarchical
crew = Crew(
    agents=[consultor, registrador, analista],  # Especialistas
    tasks=[task],
    process=Process.hierarchical,
    manager_agent=manager,  # Manager separado
    verbose=True
)

# TESTE 1: DÃºvida
print("\n" + "="*80)
print("ðŸ§ª TESTE: O que Ã© fluxo de caixa?")
print("="*80 + "\n")

result = crew.kickoff(inputs={
    "user_request": "O que Ã© fluxo de caixa?",
    "user_id": "test_user"
})

print("\n" + "="*80)
print("âœ… RESULTADO:")
print("="*80)
print(result)


